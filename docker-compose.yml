version: '3.4'

services:
  api:
    build:
      context: .
      dockerfile: CalendarEvents.API/Dockerfile
    environment:
      - DatabaseServer=mssqlserver
      - DatabaseName=CalendarEventsApiDB
      - DatabasePort=1433
      - DatabaseUser=sa
      - DatabasePassword=<YourStrong@Passw0rd>    
      - ASPNETCORE_ENVIRONMENT=Development
      - Authority=http://idp
      - ASPNETCORE_Kestrel__Certificates__Default__Password=certpassword
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    container_name: calendareventsapicontainer
    ports:
      - "5000:80"
    networks:
      - back-tier      
    volumes:
      - ~/.aspnet/https:/https:ro
    depends_on:
      - mssqlserver
      - idp

  mssqlserver:
    image: "mcr.microsoft.com/mssql/server:2017-latest"
    ports:
      - "1443:1433"
    container_name: calendareventssqlcontainer
    environment:
      - SA_PASSWORD=<YourStrong@Passw0rd>
      - ACCEPT_EULA=Y    
    networks:
      - back-tier

  idp:
    build:
      context: .
      dockerfile: CalendarEvents.IDP/Dockerfile
    environment:
      - DatabaseServer=mssqlserver
      - DatabaseName=CalendarEventsAuthDB
      - DatabasePort=1433
      - DatabaseUser=sa
      - DatabasePassword=<YourStrong@Passw0rd>
      - ASPNETCORE_ENVIRONMENT=Development          
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=certpassword
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    container_name: calendareventsauthcontainer
    ports:
      - "5001:80"      
    networks:
      - back-tier
    volumes:
      - ~/.aspnet/https:/https:ro
    depends_on:
      - mssqlserver

networks:
  back-tier:  