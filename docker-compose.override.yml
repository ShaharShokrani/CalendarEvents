version: '3.4'

services:
  api:
    build:
      context: ../CalendarEventsAPI
      dockerfile: CalendarEvents.API/Dockerfiles/API/Dockerfile
    environment:
      - DatabaseServer=apidatabase
      - DatabaseName=CalendarEventsApiDB
      - DatabasePort=1433
      - DatabaseUser=sa
      - DatabasePassword=<YourStrong@Passw0rd>
      - ASPNETCORE_ENVIRONMENT=Development
      - Authority=http://idp
    container_name: calendarevents_api_container
    ports:
      - "5000:80"
    volumes:
      - ~/.aspnet/https:/https:ro
    depends_on:
      - apidatabase
    networks:
      - back-tier
      - api-db-tier

  apidatabase:    
    build:
      context: ../CalendarEventsAPI
      dockerfile: CalendarEvents.API/Dockerfiles/API/Dockerfile
    ports:
      - "1443:1433"
    environment:
      - SA_PASSWORD=<YourStrong@Passw0rd>
      - ACCEPT_EULA=Y    
    container_name: calendarevents_api_database_container
    networks:      
      - api-db-tier

  idp:
    build:
      context: ../CalendarEventsIDP
      dockerfile: Dockerfiles/IDP/Dockerfile
    environment:
      - DatabaseServer=idpdatabase
      - DatabaseName=CalendarEventsIdpDB
      - DatabasePort=1433
      - DatabaseUser=sa
      - DatabasePassword=<YourStrong@Passw0rd>    
      - ASPNETCORE_ENVIRONMENT=Development
    container_name: calendarevents_idp_container
    ports:
      - "5001:80"
    networks:
      - back-tier
      - idp-db-tier
    depends_on:
      - idpdatabase

  idpdatabase:
    build:
      context: ../CalendarEventsIDP
      dockerfile: Dockerfiles/DB/Dockerfile
    ports:
      - "1444:1433"
    environment:
      - SA_PASSWORD=<YourStrong@Passw0rd>
      - ACCEPT_EULA=Y        
    container_name: calendarevents_idp_database_container
    networks:      
      - idp-db-tier

networks:
  back-tier:
  api-db-tier:
  idp-db-tier: